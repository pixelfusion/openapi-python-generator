from pydantic import RootModel
from typing import Union
from pydantic import ConfigDict

{% for parent_component in parent_components %}
{% if parent_component.import_type is not none %}
{{ parent_component.import_type }}
{% endif %}
{% endfor %}

class {{ schema_name }}(
    RootModel[Union[
        {%- for component in parent_component -%}
            {{ component.name }}{{ ", " if not loop.last else "" }}
        {%- endfor -%}
    ]]
    """
    {{ schema.title }} model
    {% if schema.description != None %}
    {{ schema.description }}
    {% endif %}
    """
    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        from_attributes=True
    )
